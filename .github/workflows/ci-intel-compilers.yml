# Parts of configuration file are based on the examples in this repository:
# https://github.com/oneapi-src/oneapi-ci
#
# Which have the following copyright:
# SPDX-FileCopyrightText: 2020 Intel Corporation
#
# SPDX-License-Identifier: MIT

name: Install and test use of intel compilers

on:
  push:

env:
  WINDOWS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/17392/w_HPCKit_p_2021.1.0.2682_offline.exe
  LINUX_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/17427/l_HPCKit_p_2021.1.0.2684_offline.sh
  MACOS_HPCKIT_URL: https://registrationcenter-download.intel.com/akdlm/irc_nas/17398/m_HPCKit_p_2021.1.0.2681_offline.dmg
  WINDOWS_FORTRAN_COMPONENTS: intel.oneapi.win.ifort-compiler
  LINUX_FORTRAN_COMPONENTS_WEB: intel.oneapi.lin.ifort-compiler
  MACOS_FORTRAN_COMPONENTS: intel.oneapi.mac.ifort-compiler
  WINDOWS_CPP_COMPONENTS: intel.oneapi.win.cpp-compiler
  LINUX_CPP_COMPONENTS_WEB: intel.oneapi.lin.dpcpp-cpp-compiler-pro
  MACOS_CPP_COMPONENTS: intel.oneapi.mac.cpp-compiler

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-latest, windows-latest]
    defaults:
      run:
        shell: bash

    steps:
    - name: Checkout repo
      uses: actions/checkout@v2.3.4

    - name: cache install ifort on windows
      if: runner.os == 'Windows'
      id: cache-install-windows
      uses: actions/cache@v2
      with:
        path: C:\Program Files (x86)\Intel\oneAPI\compiler
        key: install-${{ env.WINDOWS_HPCKIT_URL }}-${{ env.WINDOWS_CPP_COMPONENTS }}-compiler-${{ hashFiles('**/.github/intel-scripts/cache_exclude_windows.sh') }}

    - name: install intel compilers on windows
      if: runner.os == 'Windows' && steps.cache-install-windows.outputs.cache-hit != 'true'
      run: |
        .github/intel-scripts/install_windows.bat $WINDOWS_HPCKIT_URL $WINDOWS_CPP_COMPONENTS:$WINDOWS_FORTRAN_COMPONENTS

    - name: activate intel environmental variables on windows
      if: runner.os == 'Windows'
      run: |
        .github/intel-scripts/ifortvars_windows.bat

    - name: cache install intel compilers on linux
      if: runner.os == 'Linux'
      id: cache-install-linux
      uses: actions/cache@v2
      with:
        path: |
          /opt/intel/oneapi/compiler
        key: install-${{ env.LINUX_HPCKIT_URL }}-${{ env.LINUX_CPP_COMPONENTS_WEB }}-compiler-${{ hashFiles('**/.github/intel-scripts/cache_exclude_linux.sh') }}

    - name: install intel compilers on linux
      if: runner.os == 'Linux' && steps.cache-install-linux.outputs.cache-hit != 'true'
      run: |
        .github/intel-scripts/install_linux.sh $LINUX_HPCKIT_URL $LINUX_CPP_COMPONENTS_WEB:$LINUX_FORTRAN_COMPONENTS_WEB

    - name: activate intel environmental variables on linux
      if: runner.os == 'Linux'
      run: |
        .github/intel-scripts/ifortvars_linux.sh

    - name: cache install intel compilers on macos
      if: runner.os == 'macOS'
      id: cache-install-macos
      uses: actions/cache@v2
      with:
        path: /opt/intel/oneapi
        key: install-${{ env.MACOS_HPCKIT_URL }}-${{ env.MACOS_CPP_COMPONENTS }}

    - name: install intel compilers on macos
      if: runner.os == 'macOS' && steps.cache-install-macos.outputs.cache-hit != 'true'
      run: |
        .github/intel-scripts/install_macos.sh $MACOS_HPCKIT_URL $MACOS_CPP_COMPONENTS:$MACOS_FORTRAN_COMPONENTS

    - name: activate intel oneapi environmental variables on macos
      if: runner.os == 'macOS'
      run: |
        .github/intel-scripts/ifortvars_macos.sh

    - name: exclude unused files from cache on windows
      if: runner.os == 'Windows' && steps.cache-install-windows.outputs.cache-hit != 'true'
      run: |
        .github/intel-scripts/cache_exclude_windows.sh

    - name: exclude unused files from cache on linux
      if: runner.os == 'Linux' && steps.cache-install-linux.outputs.cache-hit != 'true'
      run: |
        .github/intel-scripts/cache_exclude_linux.sh